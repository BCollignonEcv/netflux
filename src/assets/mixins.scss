/*
 *
 * COLOR
 *
 */

@mixin customColor($color: 'primary') {
    @if $color == 'primary' {
        background-color: var(--c-tertiary);
        color: var(--c-neutral);
    }

    @if $color == 'secondary' {
        background-color: var(--c-secondary);
        color: var(--c-neutral);
    }

    @if $color == 'tertiary' {
        background-color: var(--c-tertiary);
        color: var(--c-neutral);
    }

    @if $color == 'valid' {
        background-color: var(--c-valid);
        color: var(--c-neutral);
    }

    @if $color == 'error' {
        background-color: var(--c-error);
        color: var(--c-neutral);
    }
}


/*
 * BORDER
 */
@mixin customBorder($color: 'primary', $top: 0, $right: 0, $bottom: 0, $left: 0) {
    border-color: var(--c-primary);
    @if $color == 'secondary' {
        border-color: var(--c-secondary);
    }
    @if $color == 'tertiary' {
        border-color: var(--c-tertiary);
    }
    @if $color == 'valid' {
        border-color: var(--c-valid);
    }
    @if $color == 'error' {
        border-color: var(--c-error);
    }
    @if $top != 0 {
        border-top: var(--p-1) solid;
    }
    @if $right != 0 {
        border-right: var(--p-1) solid;
    }
    @if $bottom != 0 {
        border-bottom: var(--p-1) solid;
    }
    @if $left != 0 {
        border-left: var(--p-1) solid;
    }
}

/*
 *
 * TRANSITION
 *
 */

@mixin transition-primary {
    transition: all 1s ease;
}

@mixin transition-secondary {
    transition: all 1s ease;
}

/*
 *
 * FLEX
 *
 */

 @mixin customFlex($direction: row, $mode: 'compact') {
    display: flex;
    flex-direction: $direction;

    @if $mode == 'extend' {
        &>*{
            flex: 1;
        }
    }
}

/*
 *
 * Padding
 *
 */

@mixin sectionPadding {
    padding: var(--m-1);
}
